import boto3

# Create an EC2 client
ec2 = boto3.client('ec2')

# Get a list of all running instances
instances = ec2.describe_instances(Filters=[{'Name': 'instance-state-name', 'Values': ['running']}])['Reservations']

# Iterate over each instance
for reservation in instances:
    for instance in reservation['Instances']:
        # Get the instance's usage statistics
        usage = ec2.get_metric_data(
            MetricDataQueries=[
                {
                    'Id': 'm1',
                    'MetricStat': {
                        'Metric': {
                            'Namespace': 'AWS/EC2',
                            'MetricName': 'CPUUtilization',
                            'Dimensions': [
                                {
                                    'Name': 'InstanceId',
                                    'Value': instance['InstanceId']
                                },
                            ]
                        },
                        'Period': 60,
                        'Stat': 'Average'
                    },
                    'ReturnData': True
                },
            ],
            StartTime='2022-01-01T00:00:00Z',
            EndTime='2022-01-01T23:59:59Z'
        )
        
        # Get the average CPU utilization for the instance
        cpu_utilization = usage['MetricDataResults'][0]['Values'][0]
        
        # Check if the instance is underutilized
        if cpu_utilization < 25:
            # Get the current instance type
            current_instance_type = instance['InstanceType']
            
            # Choose a more appropriate instance type
            new_instance_type = 't3.micro'
            
            # Stop the instance
            ec2.stop_instances(InstanceIds=[instance['InstanceId']])
            
            # Wait for the instance to stop
            ec2.get_waiter('instance_stopped').wait(InstanceIds=[instance['InstanceId']])
            
            # Modify the instance's instance type
            ec2.modify_instance_attribute(InstanceId=instance['InstanceId'], Attribute='instanceType', Value=new_instance_type)
            
            # Start the instance
            ec2.start_instances(InstanceIds=[instance['InstanceId']])
            
            # Print a message indicating that the instance was resized
            print(f'Instance {instance["InstanceId"]} was resized from {current_instance_type} to {new_instance_type}.')
            
